{"ast":null,"code":"import React,{useState}from'react';import HomePage from'./HomePage';import SearchProperty from'./SearchProperty';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const SearchResultPage=()=>{const[searchResults,setSearchResults]=useState([]);const[searchError,setSearchError]=useState(false);const[searchClicked,setSearchClicked]=useState(false);// Define searchClicked state\nconst handleSearch=searchCriteria=>{// Implement your search logic here (e.g., fetching data from a database)\n// For demonstration purposes, let's assume an empty array is returned for now\nconst results=[];// Replace this with your actual search logic\nsetSearchResults(results);setSearchError(results.length===0);// Set searchError if no results found\nsetSearchClicked(true);// Set searchClicked to true after search is performed\n};return/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:'center'},children:[/*#__PURE__*/_jsx(\"h1\",{children:\"\\u041D\\u0430\\u0439\\u0434\\u0438 \\u0441\\u0432\\u043E\\u044E \\u043C\\u0435\\u0447\\u0442\\u0443\"}),/*#__PURE__*/_jsx(SearchProperty,{onSearch:handleSearch}),searchClicked&&searchResults&&/*#__PURE__*/_jsx(HomePage,{searchResults:searchResults})]});};export default SearchResultPage;","map":{"version":3,"names":["React","useState","HomePage","SearchProperty","jsx","_jsx","jsxs","_jsxs","SearchResultPage","searchResults","setSearchResults","searchError","setSearchError","searchClicked","setSearchClicked","handleSearch","searchCriteria","results","length","style","textAlign","children","onSearch"],"sources":["C:/Users/eloys/OneDrive/Рабочий стол/prilozhenie/real-estate-app/src/SearchResultsPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport HomePage from './HomePage';\r\nimport SearchProperty from './SearchProperty';\r\n\r\nconst SearchResultPage = () => {\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [searchError, setSearchError] = useState(false);\r\n  const [searchClicked, setSearchClicked] = useState(false); // Define searchClicked state\r\n\r\n  const handleSearch = (searchCriteria) => {\r\n    // Implement your search logic here (e.g., fetching data from a database)\r\n    // For demonstration purposes, let's assume an empty array is returned for now\r\n    const results = []; // Replace this with your actual search logic\r\n    setSearchResults(results);\r\n    setSearchError(results.length === 0); // Set searchError if no results found\r\n    setSearchClicked(true); // Set searchClicked to true after search is performed\r\n  };\r\n\r\n  return (\r\n    <div style={{ textAlign: 'center' }}>\r\n      <h1>Найди свою мечту</h1>\r\n      <SearchProperty onSearch={handleSearch} />\r\n      {searchClicked && searchResults && <HomePage searchResults={searchResults} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchResultPage;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,QAAQ,KAAM,YAAY,CACjC,MAAO,CAAAC,cAAc,KAAM,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE9C,KAAM,CAAAC,gBAAgB,CAAGA,CAAA,GAAM,CAC7B,KAAM,CAACC,aAAa,CAAEC,gBAAgB,CAAC,CAAGT,QAAQ,CAAC,EAAE,CAAC,CACtD,KAAM,CAACU,WAAW,CAAEC,cAAc,CAAC,CAAGX,QAAQ,CAAC,KAAK,CAAC,CACrD,KAAM,CAACY,aAAa,CAAEC,gBAAgB,CAAC,CAAGb,QAAQ,CAAC,KAAK,CAAC,CAAE;AAE3D,KAAM,CAAAc,YAAY,CAAIC,cAAc,EAAK,CACvC;AACA;AACA,KAAM,CAAAC,OAAO,CAAG,EAAE,CAAE;AACpBP,gBAAgB,CAACO,OAAO,CAAC,CACzBL,cAAc,CAACK,OAAO,CAACC,MAAM,GAAK,CAAC,CAAC,CAAE;AACtCJ,gBAAgB,CAAC,IAAI,CAAC,CAAE;AAC1B,CAAC,CAED,mBACEP,KAAA,QAAKY,KAAK,CAAE,CAAEC,SAAS,CAAE,QAAS,CAAE,CAAAC,QAAA,eAClChB,IAAA,OAAAgB,QAAA,CAAI,wFAAgB,CAAI,CAAC,cACzBhB,IAAA,CAACF,cAAc,EAACmB,QAAQ,CAAEP,YAAa,CAAE,CAAC,CACzCF,aAAa,EAAIJ,aAAa,eAAIJ,IAAA,CAACH,QAAQ,EAACO,aAAa,CAAEA,aAAc,CAAE,CAAC,EAC1E,CAAC,CAEV,CAAC,CAED,cAAe,CAAAD,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}