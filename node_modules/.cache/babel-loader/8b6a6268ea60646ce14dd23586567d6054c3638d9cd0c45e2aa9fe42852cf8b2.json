{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eloys\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\prilozhenie\\\\real-estate-app\\\\src\\\\SearchResultsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport HomePage from './HomePage';\nimport SearchProperty from './SearchProperty';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchResultPage = () => {\n  _s();\n  const [searchResults, setSearchResults] = useState([]);\n  const [searchError, setSearchError] = useState(false);\n  const [searchClicked, setSearchClicked] = useState(false); // Define searchClicked state\n\n  const handleSearch = searchCriteria => {\n    // Implement your search logic here (e.g., fetching data from a database)\n    // For demonstration purposes, let's assume an empty array is returned for now\n    const results = []; // Replace this with your actual search logic\n    setSearchResults(results);\n    setSearchError(results.length === 0); // Set searchError if no results found\n    setSearchClicked(true); // Set searchClicked to true after search is performed\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u041D\\u0430\\u0439\\u0434\\u0438 \\u0441\\u0432\\u043E\\u044E \\u043C\\u0435\\u0447\\u0442\\u0443\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchProperty, {\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), searchClicked && searchResults && /*#__PURE__*/_jsxDEV(HomePage, {\n      searchResults: searchResults\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 42\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchResultPage, \"/AvaMRVq3XTlmLtsCrLfNMgLe3s=\");\n_c = SearchResultPage;\nexport default SearchResultPage;\nvar _c;\n$RefreshReg$(_c, \"SearchResultPage\");","map":{"version":3,"names":["React","useState","HomePage","SearchProperty","jsxDEV","_jsxDEV","SearchResultPage","_s","searchResults","setSearchResults","searchError","setSearchError","searchClicked","setSearchClicked","handleSearch","searchCriteria","results","length","style","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","_c","$RefreshReg$"],"sources":["C:/Users/eloys/OneDrive/Рабочий стол/prilozhenie/real-estate-app/src/SearchResultsPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport HomePage from './HomePage';\r\nimport SearchProperty from './SearchProperty';\r\n\r\nconst SearchResultPage = () => {\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [searchError, setSearchError] = useState(false);\r\n  const [searchClicked, setSearchClicked] = useState(false); // Define searchClicked state\r\n\r\n  const handleSearch = (searchCriteria) => {\r\n    // Implement your search logic here (e.g., fetching data from a database)\r\n    // For demonstration purposes, let's assume an empty array is returned for now\r\n    const results = []; // Replace this with your actual search logic\r\n    setSearchResults(results);\r\n    setSearchError(results.length === 0); // Set searchError if no results found\r\n    setSearchClicked(true); // Set searchClicked to true after search is performed\r\n  };\r\n\r\n  return (\r\n    <div style={{ textAlign: 'center' }}>\r\n      <h1>Найди свою мечту</h1>\r\n      <SearchProperty onSearch={handleSearch} />\r\n      {searchClicked && searchResults && <HomePage searchResults={searchResults} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchResultPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,cAAc,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACW,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAE3D,MAAMa,YAAY,GAAIC,cAAc,IAAK;IACvC;IACA;IACA,MAAMC,OAAO,GAAG,EAAE,CAAC,CAAC;IACpBP,gBAAgB,CAACO,OAAO,CAAC;IACzBL,cAAc,CAACK,OAAO,CAACC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;IACtCJ,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC;EAC1B,CAAC;EAED,oBACER,OAAA;IAAKa,KAAK,EAAE;MAAEC,SAAS,EAAE;IAAS,CAAE;IAAAC,QAAA,gBAClCf,OAAA;MAAAe,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBnB,OAAA,CAACF,cAAc;MAACsB,QAAQ,EAAEX;IAAa;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACzCZ,aAAa,IAAIJ,aAAa,iBAAIH,OAAA,CAACH,QAAQ;MAACM,aAAa,EAAEA;IAAc;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1E,CAAC;AAEV,CAAC;AAACjB,EAAA,CArBID,gBAAgB;AAAAoB,EAAA,GAAhBpB,gBAAgB;AAuBtB,eAAeA,gBAAgB;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}